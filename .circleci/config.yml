version: 2.1

executors:
  default:
    working_directory: ~/todo
    docker:
      - image: circleci/node:10.17
        environment:
          dbUser: postgres
          dbName: postgres
          dbPassword: PASS
      - image: circleci/postgres:latest-postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: PASS
caches:
  - &npm_cache v1-npm-deps-{{ checksum "package-lock.json" }}
commands:
  install-dependencies:
    steps:
      - restore_cache:
          key: *npm_cache
      - run: npm i
      - run: cd client && npm i
      - save_cache:
          key: *npm_cache
          paths:
            - ./node_modules
            - ./client/node_modules
  audit:
    steps:
      - run: |
          npm audit \
          cd client \
          npm audit
  setup_db:
    steps:
      - run: |
          npm run db:migrate
  build_client:
    steps:
      - run: cd client && npm run build
  build_server:
    steps:
      - run: npm run build
  linters:
    steps:
      - run: npm run lint
  tests:
    steps:
      - run: npm run test
jobs:
  install-dependencies:
    executor: default
    steps:
      - checkout
      - install-dependencies
  audit:
    executor: default
    steps:
      - checkout
      - audit
  setup_db:
    executor: default
    steps:
      - checkout
      - setup_db
  build_server:
    executor: default
    steps:
      - checkout
      - build_server
  linters:
    executor: default
    steps:
      - checkout
      - linters
  tests:
    executor: default
    steps:
      - checkout
      - tests
workflows:
  version: 2.1
  build:
    jobs:
      - install-dependencies
      - audit:
          requires:
            - install-dependencies
      - setup_db:
          requires:
            - install-dependencies
      - build_client:
          requires:
            - install-dependencies
      - build_server:
          requires:
            - install-dependencies
      - linters:
          requires:
            - build_server
            - build_client
      - tests:
          requires:
            - build_server
            - build_client
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - develop
                - master
    jobs:
      - audit
